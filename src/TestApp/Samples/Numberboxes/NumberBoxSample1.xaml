<UserControl x:Class="TestApp.Samples.Numberboxes.NumberBoxSample1"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
    xmlns:testapp="clr-namespace:TestApp.Samples"
             xmlns:local="clr-namespace:TestApp.Samples.Numberboxes"
             mc:Ignorable="d" 
             d:DesignHeight="450" d:DesignWidth="800">
    <StackPanel>
        <StackPanel.Resources>
            <testapp:EnumValuesConverter x:Key="enumSource" />
        </StackPanel.Resources>
        <Border BorderBrush="Black" BorderThickness="1" Padding="10" Margin="10">
        <testapp:KeyValuePanel Orientation="Vertical">
            <testapp:KeyValuePanel.Resources>
                <Style TargetType="TextBlock">
                    <Setter Property="Margin" Value="5,0,5,5" />
                </Style>
                <Style TargetType="ComboBox">
                    <Setter Property="Margin" Value="5,0,0,5" />
                </Style>
            </testapp:KeyValuePanel.Resources>
            <TextBlock Text="AcceptsExpression" />
            <CheckBox IsChecked="{Binding AcceptsExpression, ElementName=numberbox}" />

            <TextBlock Text="IsWrapEnabled" />
            <CheckBox IsChecked="{Binding IsWrapEnabled, ElementName=numberbox}" />

            <TextBlock Text="NumberBoxSpinButtonPlacementMode" />
            <ComboBox ItemsSource="{Binding Converter={StaticResource enumSource}, ConverterParameter={x:Type NumberBoxSpinButtonPlacementMode}}"
                      SelectedValue="{Binding SpinButtonPlacementMode, Mode=TwoWay, ElementName=numberbox}"
                      />

            <TextBlock Text="NumberBoxValidationMode" />
            <ComboBox ItemsSource="{Binding Converter={StaticResource enumSource}, ConverterParameter={x:Type NumberBoxValidationMode}}"
                      SelectedValue="{Binding ValidationMode, Mode=TwoWay, ElementName=numberbox}"
                      />

            <TextBlock Text="Minimum" />
            <TextBox Text="{Binding Minimum, ElementName=numberbox, Mode=TwoWay}" />

            <TextBlock Text="Maximum" />
            <TextBox Text="{Binding Maximum, ElementName=numberbox, Mode=TwoWay}" />
            <TextBlock Text="Header" />
            <TextBox Text="{Binding Header, ElementName=numberbox, Mode=TwoWay}" />
            <TextBlock Text="Description" />
            <TextBox Text="{Binding Description, ElementName=numberbox, Mode=TwoWay}" />
            
            </testapp:KeyValuePanel>
        </Border>

        <NumberBox x:Name="numberbox" Minimum="0" Maximum="100" AcceptsExpression="True"
                    Header="Numberbox:" Description="Some description goes here..."
                   Value="1" Margin="10" Width="200" VerticalAlignment="Center" HorizontalAlignment="Center" >
        </NumberBox>


        <Rectangle Fill="Black" Height="1" HorizontalAlignment="Stretch" Margin="10" />

        <!-- NumberBox two way binding with x:Bind -->
        <Button x:Name="SetTwoWayBoundValueNaNButton" AutomationProperties.Name="SetTwoWayBoundValueNaNButton" 
                Content="Set two way bound value to NaN" Click="SetTwoWayBoundNaNButton_Click" Margin="0,4,0,0"/>
        <NumberBox Header="TwoWayBinding" x:Name="TwoWayBoundNumberBox"
                              Value="{Binding DataModelWithINPC.Value, Mode=TwoWay}" />
        <TextBlock x:Name="TwoWayBoundNumberBoxValue" AutomationProperties.Name="TwoWayBoundNumberBoxValue" />

    </StackPanel>
</UserControl>
